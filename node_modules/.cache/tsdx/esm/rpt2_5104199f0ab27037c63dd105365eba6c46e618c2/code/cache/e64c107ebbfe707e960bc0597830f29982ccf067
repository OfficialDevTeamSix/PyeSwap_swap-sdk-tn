{"code":"import invariant from 'tiny-invariant';\r\nimport { ETHER } from './currency';\r\nimport { Token, WETH } from './token';\r\nimport { Price } from './fractions/price';\r\nexport class Route {\r\n    constructor(pairs, input, output) {\r\n        invariant(pairs.length > 0, 'PAIRS');\r\n        invariant(pairs.every(pair => pair.chainId === pairs[0].chainId), 'CHAIN_IDS');\r\n        invariant((input instanceof Token && pairs[0].involvesToken(input)) ||\r\n            (input === ETHER && pairs[0].involvesToken(WETH[pairs[0].chainId])), 'INPUT');\r\n        invariant(typeof output === 'undefined' ||\r\n            (output instanceof Token && pairs[pairs.length - 1].involvesToken(output)) ||\r\n            (output === ETHER && pairs[pairs.length - 1].involvesToken(WETH[pairs[0].chainId])), 'OUTPUT');\r\n        const path = [input instanceof Token ? input : WETH[pairs[0].chainId]];\r\n        for (const [i, pair] of pairs.entries()) {\r\n            const currentInput = path[i];\r\n            invariant(currentInput.equals(pair.token0) || currentInput.equals(pair.token1), 'PATH');\r\n            const output = currentInput.equals(pair.token0) ? pair.token1 : pair.token0;\r\n            path.push(output);\r\n        }\r\n        this.pairs = pairs;\r\n        this.path = path;\r\n        this.midPrice = Price.fromRoute(this);\r\n        this.input = input;\r\n        this.output = output ?? path[path.length - 1];\r\n    }\r\n    get chainId() {\r\n        return this.pairs[0].chainId;\r\n    }\r\n}\r\n//# sourceMappingURL=route.js.map","references":["/Users/tommy/GitHub/PyeSwap/PyeSwap_swap-sdk-tn/src/constants.ts","/Users/tommy/GitHub/PyeSwap/PyeSwap_swap-sdk-tn/node_modules/tiny-invariant/dist/tiny-invariant.d.ts","/Users/tommy/GitHub/PyeSwap/PyeSwap_swap-sdk-tn/src/entities/currency.ts","/Users/tommy/GitHub/PyeSwap/PyeSwap_swap-sdk-tn/src/entities/token.ts","/Users/tommy/GitHub/PyeSwap/PyeSwap_swap-sdk-tn/src/entities/pair.ts","/Users/tommy/GitHub/PyeSwap/PyeSwap_swap-sdk-tn/src/entities/fractions/price.ts"],"map":"{\"version\":3,\"file\":\"route.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/entities/route.ts\"],\"names\":[],\"mappings\":\"AACA,OAAO,SAAS,MAAM,gBAAgB,CAAA;AAEtC,OAAO,EAAY,KAAK,EAAE,MAAM,YAAY,CAAA;AAC5C,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,MAAM,SAAS,CAAA;AAErC,OAAO,EAAE,KAAK,EAAE,MAAM,mBAAmB,CAAA;AAEzC,MAAM,OAAO,KAAK;IAOhB,YAAmB,KAAa,EAAE,KAAe,EAAE,MAAiB;QAClE,SAAS,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,OAAO,CAAC,CAAA;QACpC,SAAS,CACP,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,EACtD,WAAW,CACZ,CAAA;QACD,SAAS,CACP,CAAC,KAAK,YAAY,KAAK,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YACzD,CAAC,KAAK,KAAK,KAAK,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EACnE,OAAO,CACR,CAAA;QACD,SAAS,CACP,OAAO,MAAM,KAAK,WAAW;YAC7B,CAAC,MAAM,YAAY,KAAK,IAAI,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;YAC1E,CAAC,MAAM,KAAK,KAAK,IAAI,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EACnF,QAAQ,CACT,CAAA;QAED,MAAM,IAAI,GAAY,CAAC,KAAK,YAAY,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAA;QAC/E,KAAK,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,KAAK,CAAC,OAAO,EAAE,EAAE;YACvC,MAAM,YAAY,GAAG,IAAI,CAAC,CAAC,CAAC,CAAA;YAC5B,SAAS,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,MAAM,CAAC,CAAA;YACvF,MAAM,MAAM,GAAG,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAA;YAC3E,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;SAClB;QAED,IAAI,CAAC,KAAK,GAAG,KAAK,CAAA;QAClB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAA;QAChB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,CAAA;QACrC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAA;QAClB,IAAI,CAAC,MAAM,GAAG,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA;IAC/C,CAAC;IAED,IAAW,OAAO;QAChB,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAA;IAC9B,CAAC;CACF\"}","dts":{"name":"/Users/tommy/GitHub/PyeSwap/PyeSwap_swap-sdk-tn/src/entities/route.d.ts","writeByteOrderMark":false,"text":"import { ChainId } from '../constants';\r\nimport { Currency } from './currency';\r\nimport { Token } from './token';\r\nimport { Pair } from './pair';\r\nimport { Price } from './fractions/price';\r\nexport declare class Route {\r\n    readonly pairs: Pair[];\r\n    readonly path: Token[];\r\n    readonly input: Currency;\r\n    readonly output: Currency;\r\n    readonly midPrice: Price;\r\n    constructor(pairs: Pair[], input: Currency, output?: Currency);\r\n    get chainId(): ChainId;\r\n}\r\n"}}
