{"code":"import JSBI from 'jsbi';\r\nexport var ChainId;\r\n(function (ChainId) {\r\n    ChainId[ChainId[\"MAINNET\"] = 56] = \"MAINNET\";\r\n    ChainId[ChainId[\"TESTNET\"] = 97] = \"TESTNET\";\r\n})(ChainId || (ChainId = {}));\r\nexport var TradeType;\r\n(function (TradeType) {\r\n    TradeType[TradeType[\"EXACT_INPUT\"] = 0] = \"EXACT_INPUT\";\r\n    TradeType[TradeType[\"EXACT_OUTPUT\"] = 1] = \"EXACT_OUTPUT\";\r\n})(TradeType || (TradeType = {}));\r\nexport var Rounding;\r\n(function (Rounding) {\r\n    Rounding[Rounding[\"ROUND_DOWN\"] = 0] = \"ROUND_DOWN\";\r\n    Rounding[Rounding[\"ROUND_HALF_UP\"] = 1] = \"ROUND_HALF_UP\";\r\n    Rounding[Rounding[\"ROUND_UP\"] = 2] = \"ROUND_UP\";\r\n})(Rounding || (Rounding = {}));\r\nexport const FACTORY_ADDRESS = {\r\n    [ChainId.MAINNET]: \"0x96A3CbC01DFe417813258Feb50E2FdF3e2eF55F9\",\r\n    [ChainId.TESTNET]: \"0x3F4d91127E77B9DC64b5aCfe4cAf980e9AA4c006\"\r\n};\r\nexport const INIT_CODE_HASH = {\r\n    [ChainId.MAINNET]: \"0x79cd7338bbc24d1768744d4b45512ebaf1b4d957405e8b48f8090c2fe7dbfef5\",\r\n    [ChainId.TESTNET]: '0x79cd7338bbc24d1768744d4b45512ebaf1b4d957405e8b48f8090c2fe7dbfef5'\r\n};\r\nexport const MINIMUM_LIQUIDITY = JSBI.BigInt(1000);\r\n// exports for internal consumption\r\nexport const ZERO = JSBI.BigInt(0);\r\nexport const ONE = JSBI.BigInt(1);\r\nexport const TWO = JSBI.BigInt(2);\r\nexport const THREE = JSBI.BigInt(3);\r\nexport const FIVE = JSBI.BigInt(5);\r\nexport const TEN = JSBI.BigInt(10);\r\nexport const _100 = JSBI.BigInt(100);\r\nexport const _9975 = JSBI.BigInt(9975);\r\nexport const _8575 = JSBI.BigInt(8575);\r\nexport const _10000 = JSBI.BigInt(10000);\r\nexport const ZERO_ADDRESS = '0x0000000000000000000000000000000000000000';\r\nexport var SolidityType;\r\n(function (SolidityType) {\r\n    SolidityType[\"uint8\"] = \"uint8\";\r\n    SolidityType[\"uint256\"] = \"uint256\";\r\n})(SolidityType || (SolidityType = {}));\r\nexport const SOLIDITY_TYPE_MAXIMA = {\r\n    [SolidityType.uint8]: JSBI.BigInt('0xff'),\r\n    [SolidityType.uint256]: JSBI.BigInt('0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff')\r\n};\r\n//# sourceMappingURL=constants.js.map","references":["/Users/tommy/GitHub/PyeSwap/PyeSwap_swap-sdk-tn/node_modules/jsbi/jsbi.d.ts"],"map":"{\"version\":3,\"file\":\"constants.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/constants.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,IAAI,MAAM,MAAM,CAAA;AAKvB,MAAM,CAAN,IAAY,OAGX;AAHD,WAAY,OAAO;IACjB,4CAAY,CAAA;IACZ,4CAAY,CAAA;AACd,CAAC,EAHW,OAAO,KAAP,OAAO,QAGlB;AAED,MAAM,CAAN,IAAY,SAGX;AAHD,WAAY,SAAS;IACnB,uDAAW,CAAA;IACX,yDAAY,CAAA;AACd,CAAC,EAHW,SAAS,KAAT,SAAS,QAGpB;AAED,MAAM,CAAN,IAAY,QAIX;AAJD,WAAY,QAAQ;IAClB,mDAAU,CAAA;IACV,yDAAa,CAAA;IACb,+CAAQ,CAAA;AACV,CAAC,EAJW,QAAQ,KAAR,QAAQ,QAInB;AAKD,MAAM,CAAC,MAAM,eAAe,GAAiB;IAC3C,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,4CAA4C;IAC/D,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,4CAA4C;CAChE,CAAA;AAED,MAAM,CAAC,MAAM,cAAc,GAAiB;IAC1C,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,oEAAoE;IACvF,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,oEAAoE;CACxF,CAAA;AAED,MAAM,CAAC,MAAM,iBAAiB,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAA;AAElD,mCAAmC;AACnC,MAAM,CAAC,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;AAClC,MAAM,CAAC,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;AACjC,MAAM,CAAC,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;AACjC,MAAM,CAAC,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;AACnC,MAAM,CAAC,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;AAClC,MAAM,CAAC,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAA;AAClC,MAAM,CAAC,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAA;AACpC,MAAM,CAAC,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAA;AACtC,MAAM,CAAC,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAA;AACtC,MAAM,CAAC,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAA;AACxC,MAAM,CAAC,MAAM,YAAY,GAAG,4CAA4C,CAAA;AAExE,MAAM,CAAN,IAAY,YAGX;AAHD,WAAY,YAAY;IACtB,+BAAe,CAAA;IACf,mCAAmB,CAAA;AACrB,CAAC,EAHW,YAAY,KAAZ,YAAY,QAGvB;AAED,MAAM,CAAC,MAAM,oBAAoB,GAAG;IAClC,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;IACzC,CAAC,YAAY,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,oEAAoE,CAAC;CAC1G,CAAA\"}","dts":{"name":"/Users/tommy/GitHub/PyeSwap/PyeSwap_swap-sdk-tn/src/constants.d.ts","writeByteOrderMark":false,"text":"import JSBI from 'jsbi';\r\nexport declare type BigintIsh = JSBI | bigint | string;\r\nexport declare enum ChainId {\r\n    MAINNET = 56,\r\n    TESTNET = 97\r\n}\r\nexport declare enum TradeType {\r\n    EXACT_INPUT = 0,\r\n    EXACT_OUTPUT = 1\r\n}\r\nexport declare enum Rounding {\r\n    ROUND_DOWN = 0,\r\n    ROUND_HALF_UP = 1,\r\n    ROUND_UP = 2\r\n}\r\ndeclare type ChainAddress = {\r\n    [chainId in ChainId]: string;\r\n};\r\nexport declare const FACTORY_ADDRESS: ChainAddress;\r\nexport declare const INIT_CODE_HASH: ChainAddress;\r\nexport declare const MINIMUM_LIQUIDITY: JSBI;\r\nexport declare const ZERO: JSBI;\r\nexport declare const ONE: JSBI;\r\nexport declare const TWO: JSBI;\r\nexport declare const THREE: JSBI;\r\nexport declare const FIVE: JSBI;\r\nexport declare const TEN: JSBI;\r\nexport declare const _100: JSBI;\r\nexport declare const _9975: JSBI;\r\nexport declare const _8575: JSBI;\r\nexport declare const _10000: JSBI;\r\nexport declare const ZERO_ADDRESS = \"0x0000000000000000000000000000000000000000\";\r\nexport declare enum SolidityType {\r\n    uint8 = \"uint8\",\r\n    uint256 = \"uint256\"\r\n}\r\nexport declare const SOLIDITY_TYPE_MAXIMA: {\r\n    uint8: JSBI;\r\n    uint256: JSBI;\r\n};\r\nexport {};\r\n"}}
